import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";
import { copyFile } from 'fs/promises';

const banner =
`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const mode = process.argv[2] || 'development';
const isProd = mode === 'production';

const context = await esbuild.context({
	banner: {
		js: banner,
	},
	entryPoints: ["src/main.ts"],
	bundle: true,
	external: [
		"obsidian",
		"electron",
		"@codemirror/autocomplete",
		"@codemirror/collab",
		"@codemirror/commands",
		"@codemirror/language",
		"@codemirror/lint",
		"@codemirror/search",
		"@codemirror/state",
		"@codemirror/view",
		"@lezer/common",
		"@lezer/highlight",
		"@lezer/lr",
		...builtins
	],
	format: "cjs",
	target: "es2018",
	logLevel: "info",
	sourcemap: isProd ? false : "inline",
	treeShaking: true,
	outfile: "dist/main.js",
	minify: isProd,
	define: {
		'process.env.NODE_ENV': JSON.stringify(mode),
	},
});

async function postBuild() {
	await copyFile('src/transcribe.py', 'dist/transcribe.py');
	await copyFile('src/styles.css', 'dist/styles.css');
	await copyFile('manifest.json', 'dist/manifest.json');
	console.log('Copied additional files to dist');
}

if (isProd) {
	await context.rebuild();
	await postBuild();
	process.exit(0);
} else {
	await context.watch();
	await postBuild();
}
